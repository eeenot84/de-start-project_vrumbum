/*Добавьте в этот файл пояснения к выбранной модели данных. 
Также вы можете сохранить здесь другие комментарии по проекту, которые вы считаете необходимыми, 
и задать вопросы ревьюеру*/


Таблица brand хранит информацию о брендах автомобилей.
-Используется SERIAL как автоинкрементный первичный ключ.
-Поля brand_name и brand_origin ограничены по длине для контроля формата ввода.
-Введено ограничение UNIQUE, чтобы избежать дублирующих записей брендов из одной страны.

Таблица color хранит уникальные названия цветов автомобилей.
-Используется VARCHAR(30), чего достаточно для большинства названий цветов.

Таблица auto описывает модели автомобилей.
-auto_name — название модели без бренда.
-gasoline_consumption — точное значение с 2 знаками после запятой (DECIMAL), допускается NULL для электромобилей.
-Связь с таблицей brand обеспечивает логическую целостность.
-UNIQUE (auto_name, brand_id) не даёт одному бренду продавать одинаковые модели.

Таблица auto_color отражает связь "многие ко многим" между авто и доступными для них цветами.
-Первичный ключ по паре (auto_id, color_id) исключает дубликаты.

Таблица client хранит данные покупателей.
-person_name и phone используются вместе как уникальный идентификатор клиента.
-phone — VARCHAR(30), позволяет хранить международный формат номера (+1, +49 и т.д.).

Таблица sale_order содержит данные о покупке автомобиля.
  Поля:
  - price: NUMERIC(10,2) для хранения точной цены продажи;
  - date: тип DATE, т.к. время покупки несущественно;
  - discount: NUMERIC(5,2), ограничено от 0 до 100 процентов через CHECK.
  Таблица связана с авто, клиентом и цветом через внешние ключи.


Комментарии к выбору типов данных:
Целочисленные идентификаторы (SERIAL, INTEGER)
brand_id, color_id, auto_id, client_id, order_id и др.
	•	SERIAL автоматически создаёт уникальные идентификаторы с автоинкрементом.
	•	Это компактный, быстрый и широко поддерживаемый способ задания первичных ключей.


VARCHAR(n) для текстовых полей
	•	brand_name VARCHAR(50)
	•	brand_origin VARCHAR(50)
	•	color_name VARCHAR(30)
	•	auto_name VARCHAR(100)
	•	person_name VARCHAR(100)
	•	phone VARCHAR(30)
VARCHAR позволяет ограничить длину текста,
чтобы предотвратить аномально длинные значения (например, телефон не должен быть 100 символов).
Размеры выбраны с запасом:
	•	50 достаточно для стран и брендов.
	•	100 — адекватно для имён и моделей.
	•	30 для телефона — достаточно, чтобы учесть международные форматы (+1-555-123-4567 и подобные).


DECIMAL(5,2) и NUMERIC(10,2) для чисел с точкой
	•	gasoline_consumption DECIMAL(5,2) — до 999.99 литров
	•	price NUMERIC(10,2) — до 99 999 999.99
	•	discount NUMERIC(5,2) — до 999.99 (но ограничено CHECK до 100%)
	•	Типы DECIMAL и NUMERIC используются для хранения точных значений, особенно важных в финансовых расчетах (в отличие от FLOAT, где возможны погрешности).
	•	Для price выбран диапазон с большим количеством знаков (10,2), чтобы охватить дорогие автомобили.
	•	Для discount и gasoline_consumption двух знаков после запятой более чем достаточно.

DATE
	•	date DATE в таблице sale_order
Он экономичнее, чем TIMESTAMP, и более нагляден при отчётах по дням.

Ограничения UNIQUE, CHECK, FOREIGN KEY, PRIMARY KEY
    •	уникальность логически неделимых данных (brand, color, client);
	•	корректность значений (CHECK discount >= 0 AND discount <= 100);
	•	структурную связанность между таблицами (FOREIGN KEY);
	•	быструю индексацию и ссылочную целостность (PRIMARY KEY).


